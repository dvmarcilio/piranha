[[rules]]
name = "send_stmt"
query = """
(
    (send_statement
        channel: (identifier) @chan_id
    ) @send_stmt
)
"""

[[rules]]
name = "func_lit"
query = """
(
    (func_literal) @func_lit
)
"""

[[rules]]
name = "method_decl"
query = """
(
    (method_declaration) @method_decl
)
"""

[[rules]]
name = "return_stmt"
query = """
(
    (return_statement) @return_stmt
)
"""

[[rules]]
# Matching unbuffered channels
# the `.` anchor denotes that the channel type should be the last child of `argument_list`
name = "chan_make"
query = """
(
    (short_var_declaration
        left:  (expression_list
            (identifier) @chan_id
        )
        right: (expression_list
            (call_expression
                function: (identifier) @func_id
                arguments: (
                    (argument_list
                        (channel_type) @chan_type .
                    )
                )
            )
        )
    )
)
"""
# (#eq? @func_id "make")
# ideally, we would have this predicate in the channel query
# however, it produces several "bogus" matches on tree-sitter CLI
# skipping it and assuming the (low?) risk of having false positives

[[rules]]
name = "chan_receive"
query = """
(
    (unary_expression
        operand: (identifier) @chan_id
    ) @u_e
    (#match? @u_e "<-.+")
)
"""

[[rules]]
name = "if_stmt"
query = """
(
    (if_statement) @if_stmt
)
"""

[[rules]]
name = "select_stmt"
query = """
(
    (select_statement) @select_stmt
)
"""
