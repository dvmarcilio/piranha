[[rules]]
name = "method_decl"
query = """
(
    (method_declaration) @method_decl
)
"""

[[rules]]
name = "function_decl"
query = """
(
    (function_declaration) @function_decl
)
"""

[[rules]]
name = "short_vdecl_call"
query = """
(
    (short_var_declaration
        left: (expression_list
            (identifier) @bool_id
            (identifier) @error_id
        )
        right: (expression_list
            (call_expression
                function: (selector_expression
                    operand: (_)
                    field: (field_identifier) @func_id
                )
                arguments: (argument_list
                    (_)
                    (_)
                    (_)
                    (_)
                )
            )
        )
    )
    (#eq? @func_id "GetBoolValue")
)
"""

[[rules]]
name = "assignment_call"
query = """
(
    (assignment_statement
        left: (expression_list
            (identifier) @bool_id
            (identifier) @error_id
        )
        right: (expression_list
            (call_expression
                function: (selector_expression
                    operand: (_)
                    field: (field_identifier) @func_id
                )
                arguments: (argument_list
                    (_)
                    (_)
                    (_)
                    (_)
                )
            )
        )
    )
    (#eq? @func_id "GetBoolValue")
)
"""

[[rules]]
name = "return_call"
query = """
(
    (return_statement
        (expression_list
            (call_expression
                function: (selector_expression
                    operand: (_)
                    field: (field_identifier) @func_id
                )
                arguments: (argument_list
                    (_)
                    (_)
                    (_)
                    (_)
                )
            )
        )
    )
    (#eq? @func_id "GetBoolValue")
)
"""

[[rules]]
name = "if_condition"
query = """
(
    (if_statement
        condition: (_) @if_cond
    )
)
"""

# [[rules]]
# Will produce several summaries
# will match
## `return enabled, nil` -> @ret_id = enabled
## `return enabled`      -> @ret_id = enabled
## `return enabled, err` -> @ret_id = enabled ; @ret_id = err
# name = "return_id"
# query = """
# (
#     (return_statement
#         (expression_list
#             (identifier) @ret_id
#             (_)*
#         )
#     )
# )
# """

[[rules]]
name = "return_id"
query = """
(
    (return_statement
        (expression_list
            (identifier) @ret_id
        )
    )
)
"""

[[rules]]
name = "return_id_id"
query = """
(
    (return_statement
        (expression_list
            (identifier) @ret_id
            (identifier)
        )
    )
)
"""

[[rules]]
name = "return_id_nil"
query = """
(
    (return_statement
        (expression_list
            (identifier) @ret_id
            (nil)
        )
    )
)
"""

# _simple_statement is hidden in the grammar
# two separate rules
[[rules]]
name = "rhs_short_vdecl"
query = """
(
    (short_var_declaration
        right: (expression_list) @exp_list
    )
)
"""

[[rules]]
name = "rhs_assignment"
query = """
(
    (assignment_statement
        right: (expression_list) @exp_list
    )
)
"""
